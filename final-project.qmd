---
title: "Exploring Wildfire's effect on Asthma"
author: "Haylee Oyler"
format: html
editor: source
execute:
  warning: false
  message: false
editor_options: 
  chunk_output_type: console
---



```{r}
#| code-fold: true
#| code-summary: "Load libraries"

library(tidyverse)
library(here)
library(janitor)
library(tmap)
library(sf)
library(spatialreg)
library(stargazer)
library(patchwork)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(dynlm)
```

## Read in data
```{r}
# Asthma hospitalizations data
asthma_hosp_county <- read_csv(here("data", "asthma-hospitalization-by-county.csv")) %>% 
  clean_names()

# Demographic data
demographics <- read_csv(here("data", "county_demographics.csv")) %>% 
  clean_names() %>% 
  filter(state == "CA")

# County boundaries geospatial data
county_boundaries <- read_sf(here("data", "ca_counties", "CA_Counties.shp")) %>% 
  clean_names() %>% 
  rename("county" = "name")

# Population totals data
pop_2020 <- read_csv(here("data", "co-est2020-alldata.csv")) %>% 
  clean_names() %>% 
  filter(stname == "California")
pop_2023 <- read_csv(here("data", "co-est2023-alldata.csv")) %>% 
  clean_names() %>% 
  filter(stname == "California")

# Cal fire perimeters data
cal_fire <- read_sf(here("data", "calfire_all.gdb")) %>% 
  clean_names()

# Read in AQI files as one dataset
aqi_files <- list.files(here("data", "aqi"), 
                        pattern = "annual",
                        full.names = TRUE)
aqi <- tibble()

for (file in aqi_files) {
  clean_file <- read_csv(file) %>% 
    clean_names() %>% 
    filter(state == "California")
  
  aqi <- rbind(aqi, clean_file)
  rm(clean_file)
}

# NASA FIRMS fire data
# modis <- read_sf(here("data", "DL_FIRE_M-C61_553990", "fire_archive_M-C61_553990.shp")) %>% 
#   clean_names()

# Smoke data
# smoke <- read_sf(here("data", "hms_smoke20171204", "hms_smoke20171204.shp")) %>% 
#   clean_names()
```


## Clean data
```{r}
# Clean the county names to make joining easier
demographics$county <- demographics$county %>% 
  str_remove(., " County")

# Select desired columns from demographics
dem_small <- demographics %>% 
  select(county, 
         income_median_houseold_income, 
         income_per_capita_income) %>% 
  rename("median_income" = "income_median_houseold_income",
         "per_capita_income" = "income_per_capita_income")

# Select desired columns from county boundaries
bound_small <- county_boundaries %>% 
  select(county, geometry)

# Clean asthma data
asthma_hosp_clean <- asthma_hosp_county %>% 
  filter(strata == "Total population",
         county != "California") %>% 
  select(-c(comment, strata_name, age_group, strata))


# Add row that's the sum of unhealthy for sensitive groups or greater
aqi$unhealthy_sum <- rowSums(aqi[, c("unhealthy_for_sensitive_groups_days", "unhealthy_days", "hazardous_days", "very_unhealthy_days")])

# Drop undesired columns from aqi data
aqi <- aqi %>% 
  select(!state) 

# Clean population data
pop_2020 <- pop_2020 %>% 
  select(ctyname, popestimate2015, popestimate2016, popestimate2017, popestimate2018, popestimate2019, popestimate2020) %>% 
 rename("county" = "ctyname")

pop_2023 <- pop_2023 %>% 
  select(ctyname, popestimate2021, popestimate2022) %>% 
 rename("county" = "ctyname")

# Join population data together
pop_total <- left_join(pop_2020, pop_2023, by = join_by(county)) 

# Clean the population column names to pivot longer
for (col in 1:ncol(pop_total)){
  colnames(pop_total)[col] <- str_remove(colnames(pop_total)[col], 
                                          "popestimate")
}

# Clean county names
pop_total$county <- pop_total$county %>% 
  str_remove(., " County")

# Pivot longer to join later on
pop_total <- pop_total %>% 
  pivot_longer(!county, names_to = "year", values_to = "population")

# Fix type for joining
pop_total$year <- as.numeric(pop_total$year)

# Clean cal fire data
cal_fire_clean <- cal_fire %>% 
  filter(year >= 2015) %>% 
  group_by(year) %>% 
  mutate(total_fires = n(),
         total_area = sum(gis_acres)) %>% 
  select(year, fire_name, gis_acres, shape_area, total_fires, total_area) %>% 
  st_drop_geometry()

cal_fire_small <- cal_fire_clean %>% 
  group_by(year) %>% 
  summarize(total_fires = n(),
         total_area = sum(gis_acres))

```

## Join data
```{r}
asthma_aqi <- left_join(asthma_hosp_clean, 
                        aqi, 
                        by = c("county" = "county", 
                               "year" = "year")) %>% 
  left_join(dem_small) %>%
  left_join(pop_total, by = c("county" = "county",
                               "year" = "year")) %>%
  left_join(bound_small) 


```


```{r}
# summary(asthma_aqi)
# Add log mutated variables

# Assign visits with zero to NA to properly apply the log transformation
asthma_aqi$number_of_hospitalizations[asthma_aqi$number_of_hospitalizations == 0] <- NA

asthma_aqi <- asthma_aqi %>% 
  drop_na(number_of_hospitalizations) %>% 
  mutate(hosp_per_100k = (number_of_hospitalizations / population) * 100000,
         log_hosp = log(hosp_per_100k),
         max_aqi = replace(max_aqi, max_aqi > 500, 500))

```

### Small data
```{r}
# Find yearly totals of hospitalizations
asthma_small <- asthma_aqi%>% 
  group_by(year) %>% 
  summarise(total_hosp_capita = sum(hosp_per_100k),
            total_hosp = sum(number_of_hospitalizations))


# Totals data from fire and asthma 
fire_asthma <- left_join(asthma_small, cal_fire_small)

write_csv(fire_asthma, path="fire_asthma")

# Plot totals data
fire_plot <- ggplot(fire_asthma, aes(year, total_area)) +
  geom_col(fill="firebrick") + 
  labs(title="Total Area Burned by Wildifres\nin California by Year",
       x="Year",
       y="Area burned (acres)") +
  theme_minimal() +
    theme(axis.title = element_text(size=13),
        title = element_text(size=14))

hosp_plot <- ggplot(fire_asthma, aes(year, total_hosp_capita)) +
  geom_col(fill="cornflowerblue") +
  labs(title="Total Asthma Hospitalizations per Capita\nin California by Year",
       x="Year",
       y="Hospitalizations per capita (per 100K)") +
  theme_minimal() +
  theme(axis.title = element_text(size=13),
        title = element_text(size=14))

fire_plot + hosp_plot

ggsave("fire-hosp.png", width = 12, height = 6)

```

### Maps
```{r}
#| eval: false

for (i in seq_along(unique(asthma_aqi$year))){
  asthma_i <- asthma_aqi %>% 
  filter(year == i) %>% 
  st_as_sf()
  
  map <- tm_shape(asthma_i) +
  tm_polygons(col="hosp_per_100k")
  
}
asthma_15 <- asthma_aqi %>% 
  filter(year == 2015) %>% 
  st_as_sf()

tm_shape(asthma_15) +
  tm_polygons(col="hosp_per_100k")

tm_shape(asthma_15) +
  tm_polygons(col="median_aqi")

tm_shape(asthma_15) +
  tm_polygons(col="per_capita_income")

```

### Looking for linear relationship
```{r}
#| eval: false
# Median AQI
med_plot <- ggplot(asthma_aqi, aes(median_aqi, hosp_per_100k)) +
  geom_point() +
  labs(title="Hospitalizations by Median AQI",
       x="Median AQI",
       y="Hospitalizations per 100K") +
  theme_minimal()
  
ggplot(asthma_aqi, aes(median_aqi, log(hosp_per_100k))) +
  geom_point()
ggplot(asthma_aqi, aes(log(median_aqi), log(hosp_per_100k))) +
  geom_point()

ggplot(asthma_aqi, aes(median_aqi, age_adjusted_hospitalization_rate)) +
  geom_point() +
  labs(title="Hospitalizations by Median AQI",
       x="Median AQI",
       y="Hospitalizations per 100K") +
  theme_minimal()
  
ggplot(asthma_aqi, aes(median_aqi, log(age_adjusted_hospitalization_rate))) +
  geom_point()
ggplot(asthma_aqi, aes(log(median_aqi), log(age_adjusted_hospitalization_rate))) +
  geom_point()

# Max AQI
ggplot(asthma_aqi, aes(max_aqi, hosp_per_100k)) +
  geom_point()
ggplot(asthma_aqi, aes(max_aqi, log(hosp_per_100k))) +
  geom_point()

max_plot <- ggplot(asthma_aqi, aes(log(max_aqi), log(hosp_per_100k))) +
  geom_point() + 
  labs(title="Log transformed Hospitalizations\nby Max AQI",
       x="log(Max AQI)",
       y="log(Hospitalizations per 100K)") +
  theme_minimal()

ggplot(asthma_aqi, aes(max_aqi, age_adjusted_hospitalization_rate)) +
  geom_point()
ggplot(asthma_aqi, aes(max_aqi, log(age_adjusted_hospitalization_rate))) +
  geom_point()

adj_max_plot <- ggplot(asthma_aqi, aes(log(max_aqi), log(age_adjusted_hospitalization_rate))) +
  geom_point() + 
  labs(title="Log transformed Age Adjusted\nHospitalization Rate by Max AQI",
       x="log(Max AQI)",
       y="log(Age adjusted hospitalization rate)") +
  theme_minimal()


# Unhealthy or greater days
ggplot(asthma_aqi, aes(unhealthy_sum, hosp_per_100k)) +
  geom_point()
ggplot(asthma_aqi, aes(unhealthy_sum, log(hosp_per_100k))) +
  geom_point()

unhealthy_plot <- ggplot(asthma_aqi, aes(log(unhealthy_sum), hosp_per_100k)) +
  geom_point() +
  labs(title="Hospitalizations by log transformed\nSum of unhealthy or worse days",
       x="log(Sum of days unhealthy for\nsensitive groups or worse)",
       y="Hospitalizations per 100K") +
  theme_minimal()

ggplot(asthma_aqi, aes(log(unhealthy_sum), log(hosp_per_100k))) +
  geom_point()

ggplot(asthma_aqi, aes(unhealthy_sum, age_adjusted_hospitalization_rate)) +
  geom_point()
ggplot(asthma_aqi, aes(unhealthy_sum, log(age_adjusted_hospitalization_rate))) +
  geom_point()
ggplot(asthma_aqi, aes(log(unhealthy_sum), age_adjusted_hospitalization_rate)) +
  geom_point()
ggplot(asthma_aqi, aes(log(unhealthy_sum), log(age_adjusted_hospitalization_rate))) +
  geom_point()

# PM 2.5 days
pm_plot <- ggplot(asthma_aqi, aes(days_pm2_5, hosp_per_100k)) +
  geom_point() +
  labs(title="Hospitalizations by days with PM 2.5",
       x="Days with PM 2.5",
       y="Hospitalizations per 100K") +
  theme_minimal()

ggplot(asthma_aqi, aes(days_pm2_5, log(hosp_per_100k))) +
  geom_point()
ggplot(asthma_aqi, aes(log(days_pm2_5), log(hosp_per_100k))) +
  geom_point()

ggplot(asthma_aqi, aes(days_pm2_5, age_adjusted_hospitalization_rate)) +
  geom_point()
ggplot(asthma_aqi, aes(days_pm2_5, log(age_adjusted_hospitalization_rate))) +
  geom_point()
ggplot(asthma_aqi, aes(log(days_pm2_5), log(age_adjusted_hospitalization_rate))) +
  geom_point()



# Income per capita
ggplot(asthma_aqi, aes(per_capita_income, hosp_per_100k)) +
  geom_point()
ggplot(asthma_aqi, aes(log(per_capita_income), hosp_per_100k)) +
  geom_point()
ggplot(asthma_aqi, aes(per_capita_income, log(hosp_per_100k))) +
  geom_point()

income_plot <- ggplot(asthma_aqi, aes(log(per_capita_income), log(hosp_per_100k))) +
  geom_point() +
  labs(title="Log transformed Hospitalizations\nby per capita income",
       x="log(Per capita income)",
       y="log(Hospitalizations per 100K)") +
  theme_minimal()

ggplot(asthma_aqi, aes(per_capita_income, age_adjusted_hospitalization_rate)) +
  geom_point()
ggplot(asthma_aqi, aes(log(per_capita_income), age_adjusted_hospitalization_rate)) +
  geom_point()
ggplot(asthma_aqi, aes(per_capita_income, log(age_adjusted_hospitalization_rate))) +
  geom_point()
ggplot(asthma_aqi, aes(log(per_capita_income), log(age_adjusted_hospitalization_rate))) +
  geom_point()


(med_plot + max_plot + unhealthy_plot) / (pm_plot + income_plot + adj_max_plot)
ggsave("scatter.png", width=10, height=6)
``` 

### Group bys
```{r}
#| eval: false

# Group by year
asthma_aqi %>% 
  group_by(year) %>% 
  summarise(mean_max_aqi = mean(max_aqi, na.rm = TRUE)) %>% 
  ggplot(aes(year, mean_max_aqi)) +
  geom_col() 

asthma_aqi %>% 
  group_by(year) %>% 
  summarize(total_hosp = sum(number_of_hospitalizations, na.rm = TRUE)) %>% 
  ggplot(aes(year, total_hosp)) +
  geom_col()

# Group by county
asthma_aqi %>% 
  group_by(county) %>% 
  summarize(total_hosp = sum(number_of_hospitalizations, na.rm = TRUE)) %>% 
  ggplot(aes(county, total_hosp)) +
  geom_point()

asthma_aqi %>% 
  group_by(county) %>% 
  summarize(total_hosp = sum(hosp_per_100k, na.rm = TRUE)) %>% 
  ggplot(aes(county, total_hosp)) +
  geom_point()

asthma_aqi[asthma_aqi$number_of_hospitalizations == max(asthma_aqi$number_of_hospitalizations)[1],]

asthma_aqi[asthma_aqi$hosp_per_100k == max(asthma_aqi$hosp_per_100k)[1],]

asthma_aqi %>% 
  group_by(county) %>% 
  summarise(median_aqi = median(median_aqi, na.rm = TRUE)) %>% 
  ggplot(aes(county, median_aqi)) +
  geom_point()

```

### LMs
```{r}
median_mod <- lm(log(hosp_per_100k) ~ median_aqi, data = asthma_aqi)
summary(median_mod)

tab_model(median_mod)

income_mod <- lm(log(hosp_per_100k) ~ log(per_capita_income), data = asthma_aqi)

hosp_rate_mod <- lm(log(age_adjusted_hospitalization_rate) ~ log(per_capita_income), data = asthma_aqi)
```

```{r}
lm1_int <- summary(median_mod)$coefficients[1,1]
lm1_slope <- summary(median_mod)$coefficients[1,2]

ggplot(asthma_aqi, aes(median_aqi, log_hosp)) +
  geom_point() +
  geom_smooth(method = "lm", se=FALSE)
  # geom_abline(intercept = lm1_int, slope = lm1_slope, aes(color = "red"))
```

### Residuals
```{r}
#| eval: false
resids <- asthma_lm$residuals
fitted_vals <- fitted(asthma_lm)
resid_plot <- tibble(resids, fitted_vals)

ggplot(resid_plot, aes(fitted_vals, resids)) +
  geom_point() +
  geom_hline(yintercept =0)
```

```{r}
median_mod_no_log <- lm(hosp_per_100k ~ median_aqi, data = asthma_aqi)
summary(median_mod_no_log)

residual_acf <- acf(resid(median_mod), plot = FALSE)
tibble(Lag = residual_acf$lag, ACF = as.vector(residual_acf$acf)) %>% 
  ggplot(aes(Lag, ACF)) +
  geom_hline(yintercept = 0, 
             linetype = "dashed", 
             color = "cornflowerblue",
             linewidth = 1.5) +
  geom_line(linewidth = 2)
```


```{r}
adl_mod <- dynlm(
  log(hosp_per_100k) ~L(log(hosp_per_100k), 1) + L(median_aqi, 0:1), data = asthma_aqi, start = 2015
  )

summary(adl_mod)
```


```{r}
st_write(asthma_aqi, "asthma_aqi.geojson", driver="GeoJSON")
```

