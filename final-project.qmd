---
title: "Exploring Wildfire's effect on Asthma"
author: "Haylee Oyler"
format: html
editor: source
editor_options: 
  chunk_output_type: console
---



```{r}
#| code-fold: true
#| code-summary: "Load libraries"

library(tidyverse)
library(here)
library(janitor)
library(httr)
library(httr2)
library(purrr)
library(RAQSAPI)
library(tmap)
library(sf)
library(spatialreg)
library(stargazer)
```

## Read in data
```{r}
# Asthma hospitalizations data
asthma_hosp_county <- read_csv(here("data", "asthma-hospitalization-by-county.csv")) %>% 
  clean_names()

# Demographic data
demographics <- read_csv(here("data", "county_demographics.csv")) %>% 
  clean_names() %>% 
  filter(state == "CA")

# County boundaries geospatial data
county_boundaries <- read_sf(here("data", "ca_counties", "CA_Counties.shp")) %>% 
  clean_names() %>% 
  rename("county" = "name")

# Population totals data
pop_2020 <- read_csv(here("data", "co-est2020-alldata.csv")) %>% 
  clean_names() %>% 
  filter(stname == "California")
pop_2023 <- read_csv(here("data", "co-est2023-alldata.csv")) %>% 
  clean_names() %>% 
  filter(stname == "California")

# Cal fire perimeters data
cal_fire <- read_sf(here("data", "calfire_all.gdb")) %>% 
  clean_names()

```

```{r}
# Read in AQI files as one dataset
aqi_files <- list.files(here("data", "aqi"), 
                        pattern = "annual",
                        full.names = TRUE)
aqi <- tibble()

for (file in aqi_files) {
  clean_file <- read_csv(file) %>% 
    clean_names() %>% 
    filter(state == "California")
  
  aqi <- rbind(aqi, clean_file)
  rm(clean_file)
}
```

## Clean data
```{r}
# Clean the county names to make joining easier
demographics$county <- demographics$county %>% 
  str_remove(., " County")

# Select desired columns from demographics
dem_small <- demographics %>% 
  select(county, 
         income_median_houseold_income, 
         income_per_capita_income) %>% 
  rename("median_income" = "income_median_houseold_income",
         "per_capita_income" = "income_per_capita_income")

# Select desired columns from county boundaries
bound_small <- county_boundaries %>% 
  select(county, geometry)

# Clean asthma data
asthma_hosp_clean <- asthma_hosp_county %>% 
  filter(strata == "Total population",
         county != "California") %>% 
  select(-c(comment, strata_name, age_group, strata))

asthma_small <- asthma_aqi%>% 
  group_by(year) %>% 
  summarise(total_hosp_capita = sum(hosp_per_100k),
            total_hosp = sum(number_of_hospitalizations))

# Add row that's the sum of unhealthy for sensitive groups or greater
aqi$unhealthy_sum <- rowSums(aqi[, c("unhealthy_for_sensitive_groups_days", "unhealthy_days", "hazardous_days", "very_unhealthy_days")])

# Drop undesired columns from aqi data
aqi <- aqi %>% 
  select(!state) 

# Clean population data
pop_2020 <- pop_2020 %>% 
  select(ctyname, popestimate2015, popestimate2016, popestimate2017, popestimate2018, popestimate2019, popestimate2020) %>% 
 rename("county" = "ctyname")

pop_2023 <- pop_2023 %>% 
  select(ctyname, popestimate2021, popestimate2022) %>% 
 rename("county" = "ctyname")

# Join population data together
pop_total <- left_join(pop_2020, pop_2023, by = join_by(county)) 

# Clean the population column names to pivot longer
for (col in 1:ncol(pop_total)){
  colnames(pop_total)[col] <- str_remove(colnames(pop_total)[col], 
                                          "popestimate")
}

# Clean county names
pop_total$county <- pop_total$county %>% 
  str_remove(., " County")

# Pivot longer to join later on
pop_total <- pop_total %>% 
  pivot_longer(!county, names_to = "year", values_to = "population")

# Fix type for joining
pop_total$year <- as.numeric(pop_total$year)

# Clean cal fire data
cal_fire_clean <- cal_fire %>% 
  filter(year >= 2015) %>% 
  group_by(year) %>% 
  mutate(total_fires = n(),
         total_area = sum(gis_acres)) %>% 
  select(year, fire_name, gis_acres, shape_area, total_fires, total_area) %>% 
  st_drop_geometry()

cal_fire_small <- cal_fire_clean %>% 
  group_by(year) %>% 
  summarize(total_fires = n(),
         total_area = sum(gis_acres))

```

## Join data
```{r}
asthma_aqi <- left_join(asthma_hosp_clean, 
                        aqi, 
                        by = c("county" = "county", 
                               "year" = "year")) %>% 
  left_join(dem_small) %>%
  left_join(pop_total, by = c("county" = "county",
                               "year" = "year")) %>%
  left_join(bound_small) 

fire_asthma <- left_join(asthma_small, cal_fire_small)

```

```{r}
ggplot(fire_asthma, aes(year, total_area)) +
  geom_line()

ggplot(fire_asthma, aes(year, total_hosp_capita)) +
  geom_line()
```


```{r}
# summary(asthma_aqi)
# Add log mutated variables

asthma_aqi$number_of_hospitalizations[asthma_aqi$number_of_hospitalizations == 0] <- NA

asthma_aqi <- asthma_aqi %>% 
  drop_na(number_of_hospitalizations) %>% 
  mutate(hosp_per_100k = (number_of_hospitalizations / population) * 100000,
         log_hosp = log(hosp_per_100k),
         max_aqi = replace(max_aqi, max_aqi > 500, 500))

summary(asthma_aqi)
```

```{r}
# Median AQI
ggplot(asthma_aqi, aes(median_aqi, hosp_per_100k)) +
  geom_point()
ggplot(asthma_aqi, aes(median_aqi, log(number_of_hospitalizations))) +
  geom_point()
ggplot(asthma_aqi, aes(log(median_aqi), log(hosp_per_100k))) +
  geom_point()

# Max AQI
ggplot(asthma_aqi, aes(max_aqi, hosp_per_100k)) +
  geom_point()
ggplot(asthma_aqi, aes(max_aqi, log(hosp_per_100k))) +
  geom_point()
ggplot(asthma_aqi, aes(log(max_aqi), log(hosp_per_100k))) +
  geom_point()

# Unhealthy or greater days
ggplot(asthma_aqi, aes(unhealthy_sum, hosp_per_100k)) +
  geom_point()
ggplot(asthma_aqi, aes(unhealthy_sum, log(hosp_per_100k))) +
  geom_point()
ggplot(asthma_aqi, aes(log(unhealthy_sum), log(hosp_per_100k))) +
  geom_point()

# PM 2.5 days
ggplot(asthma_aqi, aes(days_pm2_5, hosp_per_100k)) +
  geom_point()
ggplot(asthma_aqi, aes(days_pm2_5, log(hosp_per_100k))) +
  geom_point()
ggplot(asthma_aqi, aes(log(days_pm2_5), log(hosp_per_100k))) +
  geom_point()

# Income per capita
ggplot(asthma_aqi, aes(per_capita_income, median_aqi)) +
  geom_point()
ggplot(asthma_aqi, aes(per_capita_income, log(median_aqi))) +
  geom_point()
ggplot(asthma_aqi, aes(log(per_capita_income), log(median_aqi))) +
  geom_point()

asthma_aqi %>% 
  group_by(year) %>% 
  summarise(median_aqi = median(median_aqi, na.rm = TRUE)) %>% 
  ggplot(aes(year, median_aqi)) +
  geom_line()
``` 

```{r}
asthma_aqi %>% 
  group_by(year) %>% 
  summarize(total_hosp = sum(number_of_hospitalizations, na.rm = TRUE)) %>% 
  ggplot(aes(year, total_hosp)) +
  geom_point()

asthma_aqi %>% 
  group_by(county) %>% 
  summarize(total_hosp = sum(number_of_hospitalizations, na.rm = TRUE)) %>% 
  ggplot(aes(county, total_hosp)) +
  geom_point()

asthma_aqi %>% 
  group_by(county) %>% 
  summarize(total_hosp = sum(hosp_per_100k, na.rm = TRUE)) %>% 
  ggplot(aes(county, total_hosp)) +
  geom_point()

asthma_aqi[asthma_aqi$number_of_hospitalizations == max(asthma_aqi$number_of_hospitalizations)[1],]

asthma_aqi[asthma_aqi$hosp_per_100k == max(asthma_aqi$hosp_per_100k)[1],]

asthma_aqi %>% 
  group_by(county) %>% 
  summarise(median_aqi = median(median_aqi, na.rm = TRUE)) %>% 
  ggplot(aes(county, median_aqi)) +
  geom_point()

```

```{r}
asthma_lm <- lm(log(hosp_per_100k) ~ median_aqi, data = asthma_aqi)
summary(asthma_lm)
```

```{r}
lm1_int <- summary(asthma_lm)$coefficients[1,1]
lm1_slope <- summary(asthma_lm)$coefficients[1,2]

ggplot(asthma_aqi, aes(median_aqi, log_hosp)) +
  geom_point() +
  geom_smooth(method = "lm", se=FALSE)
  # geom_abline(intercept = lm1_int, slope = lm1_slope, aes(color = "red"))
```

```{r}
resids <- asthma_lm$residuals
fitted_vals <- fitted(asthma_lm)
resid_plot <- tibble(resids, fitted_vals)

ggplot(resid_plot, aes(fitted_vals, resids)) +
  geom_point() +
  geom_hline(yintercept =0)
```

